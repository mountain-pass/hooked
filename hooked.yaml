
env:
  default:
    # username: ${USER}
    # GIT_COMMIT:
    #   $cmd: git rev-parse --short HEAD || echo "NOT_AVAILABLE"
    # RECENT_DOWNLOAD:
    #   $stdin: "Please choose a recently Downloaded file:"
    #   $choices:
    #     $cmd: ls -1t ~/Downloads | head -10
    # NOW:
    #   $cmd: date +%Y-%m-%dT%H:%M:%S%z
    # JAVASCRIPT:
    #   $cmd: node -e "console.log(1+1)" || echo 'ERROR'
    # DOCKER:
    #   $cmd: docker run --rm node:lts-alpine -e "console.log(1+2)" || echo 'NOT_PRESENT'
    # JQ_VERSION:
    #   $cmd: |
    #     #!/bin/sh -ev
    #     jq --version || echo 'NOT_PRESENT'

# This is the scripts section. It uses hierarchies to guide the user. Go as deep as you want!
scripts:
  which:
    $cmd: which npx
  🌞 echo:
    $cmd: echo Hello there!
    # $cmd: echo now=${NOW}, javascript=${JAVASCRIPT}, docker=${DOCKER}, jq=${JQ_VERSION}
  🍹 copy:
    $cmd: |
      mkdir -p ~/.hooked/imports
      cp imports/*.yaml ~/.hooked/imports
  install:
    local:
      $cmd: |
        npx lerna exec --scope @mountainpass/* npm install
        npx lerna run --scope @mountainpass/* build
        npm i -g --force .
    global:
      $cmd: npm i -g --prefer-online --force @mountainpass/hooked-cli
  uninstall:
    local:
      $cmd: npm uninstall -g --force hooked
    global:
      $cmd: npm uninstall -g --force @mountainpass/hooked-cli
  lerna:
    graph:
      $cmd: npx nx graph
    bootstrap:
      $cmd: npx lerna bootstrap
    install:
      $cmd: npx lerna exec --scope @mountainpass/* npm install
    build:
      $cmd: npx lerna run --scope @mountainpass/* build
    bump:
      $cmd: npx lerna version patch --yes --force-publish --message '%s [skip ci]'
    publish:
      $cmd: npx lerna publish from-package --yes
  publish:
    $cmd: |
      #!/bin/sh -ve
      if [[ `git status --porcelain` ]]; then
        >&2 echo "Local git changes found, please commit before releasing."
        exit 99
      fi
      npx lerna exec --scope @mountainpass/* npm install
      npx lerna run --scope @mountainpass/* test
      rm cli/.tmp-*.sh || true
      npx lerna run --scope @mountainpass/* build
      npx lerna version patch --yes --force-publish --message '%s [skip ci]'
      npx lerna publish from-package --yes


