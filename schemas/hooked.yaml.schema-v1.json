{
  "$id": "https://github.com/mountain-pass/hooked/schemas/hooked.yaml.schema-v1.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "JSON Schema for 'Hooked' - a command line tool to manage scripts.",
  "description": "Manage and execute your scripts from a single place.",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "imports": {
      "description": "Specifies a `string[]` of file paths or http endpoints, of hooked configuration files. These files are (downloaded), loaded and merged into the current running configuration (in order).",
      "type": "array",
      "items": {
        "description": "A file path or http endpoint, resolving to a hooked configuration file. File paths support glob pattern matching.",
        "type": "string"
      }
    },
    "plugin": {
      "description": "Provides the ability to use built-in plugins.",
      "type": "object",
      "properties": {
        "icons": {
          "description": "Makes pretty icons to differentiate executable scripts vs groups.",
          "type": "boolean"
        },
        "abi": {
          "description": "Scans for `*.json` files, and imports the contract methods as scripts.\nRequired environment variables:\n- PROVIDER_URL\n- PRIVATE_KEY (?)\n- BLOCK_NUMBER (?)",
          "type": "boolean"
        },
        "makefile": {
          "description": "Scans for a `Makefile` file, and imports the named tasks as scripts.",
          "type": "boolean"
        },
        "npm": {
          "description": "Scans for a `package.json` file, and imports the named scripts as scripts.",
          "type": "boolean"
        }
      }
    },
    "env": {
      "description": "Globally defined environment variables, which can be referenced inside `scripts`.",
      "$ref": "#/$defs/envGroup"
    },
    "scripts": {
      "description": "Organises `$cmd`, `$path` and `$job_chain` objects, into a named hierarchy.",
      "$ref": "#/$defs/scriptsGroup"
    }
  },
  "$defs": {
    "scriptsGroup": {
      "description": "Organises `$cmd` objects, into a named hierarchy.",
      "additionalProperties": false,
      "patternProperties": {
        "^.*$": {
          "anyOf": [
            {
              "$ref": "#/$defs/JobChainScript"
            },
            {
              "$ref": "#/$defs/WritePathScript"
            },
            {
              "$ref": "#/$defs/CmdScript"
            },
            {
              "$ref": "#/$defs/scriptsGroup"
            }
          ]
        }
      }
    },
    "envGroup": {
      "description": "A named group of environment variables.",
      "additionalProperties": false,
      "patternProperties": {
        "^.*$": {
          "description": "A named group of environment variables.",
          "additionalProperties": false,
          "$ref": "#/$defs/envValue"
        }
      }
    },
    "envValue": {
      "description": "An environment variable key / value pair.\nReserved environment variables:\n- SKIP_VERSION_CHECK (?)\n- DOCKER_SCRIPT (?)\n- SSH_SCRIPT (?)\n- NPM_SCRIPT (?)\n- MAKE_FILE (?)\n- MAKE_SCRIPT (?)",
      "patternProperties": {
        "^.*$": {
          "description": "An environment variable key / value pair.\nReserved environment variables:\n- SKIP_VERSION_CHECK (?)\n- DOCKER_SCRIPT (?)\n- SSH_SCRIPT (?)\n- NPM_SCRIPT (?)\n- MAKE_FILE (?)\n- MAKE_SCRIPT (?)",
          "oneOf": [
            {
              "description": "Executes a command, and optionally provides output to environment variables or stdin.",
              "$ref": "#/$defs/CmdScript"
            },
            {
              "description": "Provides a prompt to the user, to select from a set of choices.",
              "$ref": "#/$defs/stdinValue"
            },
            {
              "description": "Resolves to a plain text string.\nResolves any `${..}` environment variables within the string.\nThrows an error if an environment variable is missing. Can be used to enforce presence of variables.",
              "type": "string"
            },
            {
              "description": "Resolves to a plain text string.",
              "type": "number"
            },
            {
              "description": "Resolves to a plain text string.",
              "type": "boolean"
            }
          ]
        }
      }
    },
    "JobChainScript": {
      "type": "object",
      "description": "Allows running multiple jobs, one after the other. Environment variables will be accumulated, and passed on to future jobs.",
      "additionalProperties": false,
      "properties": {
        "$job_chain": {
          "description": "Allows running multiple jobs, one after the other. Environment variables will be accumulated, and passed on to future jobs.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "description": "A script path.",
                "type": "string"
              },
              {
                "$ref": "#/$defs/WritePathScript"
              },
              {
                "$ref": "#/$defs/CmdScript"
              },
              {
                "$ref": "#/$defs/scriptsGroup"
              }
            ]
          }
        }
      },
      "required": [
        "$job_chain"
      ]
    },
    "WritePathScript": {
      "description": "Configuration for writing a file/folder.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "$path": {
          "description": "Sets the file/folder location.",
          "type": "string"
        },
        "$content": {
          "description": "Sets the contents of the file to match the string. If an object is provided, will attempt to serialise the content to match either Yaml or Json (using the file extension). If absent, treats the path as a folder.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "$permissions": {
          "description": "Sets the read/write/execute access permissions on the file/folder (default '644').",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ]
        },
        "$encoding": {
          "description": "Sets file encoding (default 'utf-8').",
          "type": "string"
        },
        "$owner": {
          "description": "Sets the 'uid:gid' of the file/folder. (Note: must be numerical!).",
          "type": "string"
        }
      },
      "required": [
        "$path"
      ]
    },
    "CmdScript": {
      "type": "object",
      "description": "Executes a command, and optionally provides output to environment variables or stdin.",
      "additionalProperties": false,
      "properties": {
        "$env": {
          "description": "Additional environment variables to resolve (added to global environment). Resolved before $envNames",
          "type": "#/$defs/envGroup"
        },
        "$envNames": {
          "description": "Additional environment group names to resolve ONLY when executing command. Resolved after $env.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "$envFromHost": {
          "description": "If true, includes all environment variables from the host machine. (On by default for non-$ssh and non-$image commands (i.e. local).",
          "type": "boolean"
        },
        "$cmd": {
          "description": "The command to execute. Supports multiline.",
          "type": "string"
        },
        "$errorMessage": {
          "description": "The message to show, if an error occurs.",
          "type": "string"
        },
        "$image": {
          "description": "If supplied, command will execute in this docker image container.",
          "type": "string"
        },
        "$ssh": {
          "description": "If supplied, command will execute in this remote server.",
          "type": "string"
        }
      },
      "required": [
        "$cmd"
      ]
    },
    "stdinValue": {
      "type": "object",
      "additionalProperties": false,
      "description": "Provides a prompt to the user, to select from a set of choices.",
      "properties": {
        "$stdin": {
          "description": "The prompt provided to the user.",
          "type": "string"
        },
        "$default": {
          "description": "The default value provided to the user.",
          "type": "string"
        },
        "$choices": {
          "description": "Provides different choices to the user. Can be a multiline string, array, object, arrays of name/value objects, Scripts, etc.",
          "$ref": "#/$defs/stdinChoicesValue"
        },
        "$fieldsMapping": {
          "description": "For JSON arrays, name and value can be overridden by specifying alternative JSON paths.",
          "$ref": "#/$defs/fieldsMappingValue"
        },
        "$filter": {
          "description": "A regex filter to apply to the 'name' or values.",
          "type": "string"
        },
        "$sort": {
          "description": "Sorts the displayed 'name' values.",
          "enum": [
            "alpha",
            "alphaDesc",
            "none"
          ]
        }
      },
      "required": [
        "$stdin"
      ]
    },
    "stdinChoicesValue": {
      "description": "Provides different choices to the user. Can be a multiline string, array, object, arrays of name/value objects, Scripts, etc.",
      "oneOf": [
        {
          "$ref": "#/$defs/CmdScript"
        },
        {
          "description": "A multiline string, each line will become a choice.",
          "type": "string"
        },
        {
          "description": "An array of string options, each entry will become a choice.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "description": "An array of name/value object, each entry will become a choice.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      ]
    },
    "fieldsMappingValue": {
      "type": "object",
      "description": "For JSON arrays, name and value can be overridden by specifying alternative JSON paths.",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "A JSON path to the 'name' value.",
          "type": "string"
        },
        "value": {
          "description": "A JSON path to the 'value' value.",
          "type": "string"
        }
      }
    }
  }
}